---
- block:
  - name: install dependency packages
    become: true
    yum:
      name: git
      state: present

  - name: clone tripleo-repos
    become: true
    git:
      repo: "{{ tripleo_repos_url }}"
      dest: /root/tripleo-repos
      clone: yes
      force: yes

  - name: install tripleo-repos
    become: true
    shell: "cd /root/tripleo-repos; python setup.py install"

  - name: switch repo to master which contains latest ovs
    become: true
    shell: "tripleo-repos -b queens current"

  - name: update packages to latest
    become: true
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
      - "{{ packages_to_upgrade }}"

  - name: switch repo back
    become: true
    shell: "tripleo-repos -b newton current"
  when: ansible_distribution == 'CentOS'

- block:
  - name: switch repo to master which contains latest ovs
    become: true
    shell: "rhos-release 13"

  - name: update packages to latest
    become: true
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
      - "{{ packages_to_upgrade }}"

  - name: switch repo back
    become: true
    shell: "rhos-release -x 10"
  when: ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution=='RedHat'

# TODO: retrieve dpdk port mapping automatically
#       instead of using configurable parameter:
#       dpdk_ports dict.
- name: add ovs-extra/dev-args in dpdk network config file
  become: true
  lineinfile:
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}"
    line: 'OVS_EXTRA="set Interface {{ item.key }} options:dpdk-devargs={{ item.value }}"'
    state: present
  with_dict: "{{ dpdk_ports }}"
  when: dpdk_enabled|bool

- name: config ovs default.conf
  become: true
  lineinfile:
    dest: /etc/openvswitch/default.conf
    regexp: '^OVS_USER_ID=".*"'
    line: 'OVS_USER_ID="openvswitch:hugetlbfs"'
    state: present
    backrefs: yes

- name: config libvirt qemu.conf
  become: true
  lineinfile:
    dest: /etc/libvirt/qemu.conf
    line: "{{ item }}"
    state: present
  with_items:
    - 'user = "openvswitch"'
    - 'group = "hugetlbfs"'

- name: add hugetlbfs group
  become: true
  group:
    name: hugetlbfs
    state: present

- name: add openvswitch user
  become: true
  user:
    name: openvswitch
    shell: /sbin/nologin
    comment: "OpenvSwitch Daemons"
    home: /
    system: yes
    group: hugetlbfs

- name: change owner and group of openvswitch files
  become: true
  file:
    path: "{{ item.name }}"
    owner: openvswitch
    group: hugetlbfs
    recurse: yes
  with_items:
    - name: "{{ ovs_config_dir }}"
    - name: "{{ ovs_log_dir }}"
    - name: "{{ ovs_run_dir }}"

- name: change vfio group
  become: true
  file:
    path: /dev/vfio
    group: hugetlbfs
    recurse: yes

- name: restart server
  shell: sleep 2 && sudo reboot
  async: 1
  poll: 0

- name: Waiting for reboot to start
  pause:
    seconds: 30

- name: Wait for nodes to become accessible
  local_action: shell ssh heat-admin@{{ inventory_hostname }} exit
  register: result
  ignore_errors: true
  until: result.rc == 0
  retries: 120
  delay: 20
